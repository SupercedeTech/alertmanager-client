{-
   Alertmanager API

   API of the Prometheus Alertmanager (https://github.com/prometheus/alertmanager)

   OpenAPI Version: 3.0.1
   Alertmanager API API version: 0.0.1
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Alertmanager.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Alertmanager.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Alertmanager.Model
import Alertmanager.Core


-- * Alert

-- | 'alertLabels' Lens
alertLabelsL :: Lens_' Alert ((Map.Map String Text))
alertLabelsL f Alert{..} = (\alertLabels -> Alert { alertLabels, ..} ) <$> f alertLabels
{-# INLINE alertLabelsL #-}

-- | 'alertGeneratorUrl' Lens
alertGeneratorUrlL :: Lens_' Alert (Maybe Text)
alertGeneratorUrlL f Alert{..} = (\alertGeneratorUrl -> Alert { alertGeneratorUrl, ..} ) <$> f alertGeneratorUrl
{-# INLINE alertGeneratorUrlL #-}



-- * AlertGroup

-- | 'alertGroupLabels' Lens
alertGroupLabelsL :: Lens_' AlertGroup ((Map.Map String Text))
alertGroupLabelsL f AlertGroup{..} = (\alertGroupLabels -> AlertGroup { alertGroupLabels, ..} ) <$> f alertGroupLabels
{-# INLINE alertGroupLabelsL #-}

-- | 'alertGroupReceiver' Lens
alertGroupReceiverL :: Lens_' AlertGroup (Receiver)
alertGroupReceiverL f AlertGroup{..} = (\alertGroupReceiver -> AlertGroup { alertGroupReceiver, ..} ) <$> f alertGroupReceiver
{-# INLINE alertGroupReceiverL #-}

-- | 'alertGroupAlerts' Lens
alertGroupAlertsL :: Lens_' AlertGroup ([GettableAlert])
alertGroupAlertsL f AlertGroup{..} = (\alertGroupAlerts -> AlertGroup { alertGroupAlerts, ..} ) <$> f alertGroupAlerts
{-# INLINE alertGroupAlertsL #-}



-- * AlertStatus

-- | 'alertStatusState' Lens
alertStatusStateL :: Lens_' AlertStatus (E'State2)
alertStatusStateL f AlertStatus{..} = (\alertStatusState -> AlertStatus { alertStatusState, ..} ) <$> f alertStatusState
{-# INLINE alertStatusStateL #-}

-- | 'alertStatusSilencedBy' Lens
alertStatusSilencedByL :: Lens_' AlertStatus ([Text])
alertStatusSilencedByL f AlertStatus{..} = (\alertStatusSilencedBy -> AlertStatus { alertStatusSilencedBy, ..} ) <$> f alertStatusSilencedBy
{-# INLINE alertStatusSilencedByL #-}

-- | 'alertStatusInhibitedBy' Lens
alertStatusInhibitedByL :: Lens_' AlertStatus ([Text])
alertStatusInhibitedByL f AlertStatus{..} = (\alertStatusInhibitedBy -> AlertStatus { alertStatusInhibitedBy, ..} ) <$> f alertStatusInhibitedBy
{-# INLINE alertStatusInhibitedByL #-}



-- * AlertmanagerConfig

-- | 'alertmanagerConfigOriginal' Lens
alertmanagerConfigOriginalL :: Lens_' AlertmanagerConfig (Text)
alertmanagerConfigOriginalL f AlertmanagerConfig{..} = (\alertmanagerConfigOriginal -> AlertmanagerConfig { alertmanagerConfigOriginal, ..} ) <$> f alertmanagerConfigOriginal
{-# INLINE alertmanagerConfigOriginalL #-}



-- * AlertmanagerStatus

-- | 'alertmanagerStatusCluster' Lens
alertmanagerStatusClusterL :: Lens_' AlertmanagerStatus (ClusterStatus)
alertmanagerStatusClusterL f AlertmanagerStatus{..} = (\alertmanagerStatusCluster -> AlertmanagerStatus { alertmanagerStatusCluster, ..} ) <$> f alertmanagerStatusCluster
{-# INLINE alertmanagerStatusClusterL #-}

-- | 'alertmanagerStatusVersionInfo' Lens
alertmanagerStatusVersionInfoL :: Lens_' AlertmanagerStatus (VersionInfo)
alertmanagerStatusVersionInfoL f AlertmanagerStatus{..} = (\alertmanagerStatusVersionInfo -> AlertmanagerStatus { alertmanagerStatusVersionInfo, ..} ) <$> f alertmanagerStatusVersionInfo
{-# INLINE alertmanagerStatusVersionInfoL #-}

-- | 'alertmanagerStatusConfig' Lens
alertmanagerStatusConfigL :: Lens_' AlertmanagerStatus (AlertmanagerConfig)
alertmanagerStatusConfigL f AlertmanagerStatus{..} = (\alertmanagerStatusConfig -> AlertmanagerStatus { alertmanagerStatusConfig, ..} ) <$> f alertmanagerStatusConfig
{-# INLINE alertmanagerStatusConfigL #-}

-- | 'alertmanagerStatusUptime' Lens
alertmanagerStatusUptimeL :: Lens_' AlertmanagerStatus (DateTime)
alertmanagerStatusUptimeL f AlertmanagerStatus{..} = (\alertmanagerStatusUptime -> AlertmanagerStatus { alertmanagerStatusUptime, ..} ) <$> f alertmanagerStatusUptime
{-# INLINE alertmanagerStatusUptimeL #-}



-- * ClusterStatus

-- | 'clusterStatusName' Lens
clusterStatusNameL :: Lens_' ClusterStatus (Maybe Text)
clusterStatusNameL f ClusterStatus{..} = (\clusterStatusName -> ClusterStatus { clusterStatusName, ..} ) <$> f clusterStatusName
{-# INLINE clusterStatusNameL #-}

-- | 'clusterStatusStatus' Lens
clusterStatusStatusL :: Lens_' ClusterStatus (E'Status)
clusterStatusStatusL f ClusterStatus{..} = (\clusterStatusStatus -> ClusterStatus { clusterStatusStatus, ..} ) <$> f clusterStatusStatus
{-# INLINE clusterStatusStatusL #-}

-- | 'clusterStatusPeers' Lens
clusterStatusPeersL :: Lens_' ClusterStatus (Maybe [PeerStatus])
clusterStatusPeersL f ClusterStatus{..} = (\clusterStatusPeers -> ClusterStatus { clusterStatusPeers, ..} ) <$> f clusterStatusPeers
{-# INLINE clusterStatusPeersL #-}



-- * GettableAlert

-- | 'gettableAlertAnnotations' Lens
gettableAlertAnnotationsL :: Lens_' GettableAlert ((Map.Map String Text))
gettableAlertAnnotationsL f GettableAlert{..} = (\gettableAlertAnnotations -> GettableAlert { gettableAlertAnnotations, ..} ) <$> f gettableAlertAnnotations
{-# INLINE gettableAlertAnnotationsL #-}

-- | 'gettableAlertReceivers' Lens
gettableAlertReceiversL :: Lens_' GettableAlert ([Receiver])
gettableAlertReceiversL f GettableAlert{..} = (\gettableAlertReceivers -> GettableAlert { gettableAlertReceivers, ..} ) <$> f gettableAlertReceivers
{-# INLINE gettableAlertReceiversL #-}

-- | 'gettableAlertFingerprint' Lens
gettableAlertFingerprintL :: Lens_' GettableAlert (Text)
gettableAlertFingerprintL f GettableAlert{..} = (\gettableAlertFingerprint -> GettableAlert { gettableAlertFingerprint, ..} ) <$> f gettableAlertFingerprint
{-# INLINE gettableAlertFingerprintL #-}

-- | 'gettableAlertStartsAt' Lens
gettableAlertStartsAtL :: Lens_' GettableAlert (DateTime)
gettableAlertStartsAtL f GettableAlert{..} = (\gettableAlertStartsAt -> GettableAlert { gettableAlertStartsAt, ..} ) <$> f gettableAlertStartsAt
{-# INLINE gettableAlertStartsAtL #-}

-- | 'gettableAlertUpdatedAt' Lens
gettableAlertUpdatedAtL :: Lens_' GettableAlert (DateTime)
gettableAlertUpdatedAtL f GettableAlert{..} = (\gettableAlertUpdatedAt -> GettableAlert { gettableAlertUpdatedAt, ..} ) <$> f gettableAlertUpdatedAt
{-# INLINE gettableAlertUpdatedAtL #-}

-- | 'gettableAlertEndsAt' Lens
gettableAlertEndsAtL :: Lens_' GettableAlert (DateTime)
gettableAlertEndsAtL f GettableAlert{..} = (\gettableAlertEndsAt -> GettableAlert { gettableAlertEndsAt, ..} ) <$> f gettableAlertEndsAt
{-# INLINE gettableAlertEndsAtL #-}

-- | 'gettableAlertStatus' Lens
gettableAlertStatusL :: Lens_' GettableAlert (AlertStatus)
gettableAlertStatusL f GettableAlert{..} = (\gettableAlertStatus -> GettableAlert { gettableAlertStatus, ..} ) <$> f gettableAlertStatus
{-# INLINE gettableAlertStatusL #-}

-- | 'gettableAlertLabels' Lens
gettableAlertLabelsL :: Lens_' GettableAlert ((Map.Map String Text))
gettableAlertLabelsL f GettableAlert{..} = (\gettableAlertLabels -> GettableAlert { gettableAlertLabels, ..} ) <$> f gettableAlertLabels
{-# INLINE gettableAlertLabelsL #-}

-- | 'gettableAlertGeneratorUrl' Lens
gettableAlertGeneratorUrlL :: Lens_' GettableAlert (Maybe Text)
gettableAlertGeneratorUrlL f GettableAlert{..} = (\gettableAlertGeneratorUrl -> GettableAlert { gettableAlertGeneratorUrl, ..} ) <$> f gettableAlertGeneratorUrl
{-# INLINE gettableAlertGeneratorUrlL #-}



-- * GettableAlertAllOf

-- | 'gettableAlertAllOfAnnotations' Lens
gettableAlertAllOfAnnotationsL :: Lens_' GettableAlertAllOf ((Map.Map String Text))
gettableAlertAllOfAnnotationsL f GettableAlertAllOf{..} = (\gettableAlertAllOfAnnotations -> GettableAlertAllOf { gettableAlertAllOfAnnotations, ..} ) <$> f gettableAlertAllOfAnnotations
{-# INLINE gettableAlertAllOfAnnotationsL #-}

-- | 'gettableAlertAllOfReceivers' Lens
gettableAlertAllOfReceiversL :: Lens_' GettableAlertAllOf ([Receiver])
gettableAlertAllOfReceiversL f GettableAlertAllOf{..} = (\gettableAlertAllOfReceivers -> GettableAlertAllOf { gettableAlertAllOfReceivers, ..} ) <$> f gettableAlertAllOfReceivers
{-# INLINE gettableAlertAllOfReceiversL #-}

-- | 'gettableAlertAllOfFingerprint' Lens
gettableAlertAllOfFingerprintL :: Lens_' GettableAlertAllOf (Text)
gettableAlertAllOfFingerprintL f GettableAlertAllOf{..} = (\gettableAlertAllOfFingerprint -> GettableAlertAllOf { gettableAlertAllOfFingerprint, ..} ) <$> f gettableAlertAllOfFingerprint
{-# INLINE gettableAlertAllOfFingerprintL #-}

-- | 'gettableAlertAllOfStartsAt' Lens
gettableAlertAllOfStartsAtL :: Lens_' GettableAlertAllOf (DateTime)
gettableAlertAllOfStartsAtL f GettableAlertAllOf{..} = (\gettableAlertAllOfStartsAt -> GettableAlertAllOf { gettableAlertAllOfStartsAt, ..} ) <$> f gettableAlertAllOfStartsAt
{-# INLINE gettableAlertAllOfStartsAtL #-}

-- | 'gettableAlertAllOfUpdatedAt' Lens
gettableAlertAllOfUpdatedAtL :: Lens_' GettableAlertAllOf (DateTime)
gettableAlertAllOfUpdatedAtL f GettableAlertAllOf{..} = (\gettableAlertAllOfUpdatedAt -> GettableAlertAllOf { gettableAlertAllOfUpdatedAt, ..} ) <$> f gettableAlertAllOfUpdatedAt
{-# INLINE gettableAlertAllOfUpdatedAtL #-}

-- | 'gettableAlertAllOfEndsAt' Lens
gettableAlertAllOfEndsAtL :: Lens_' GettableAlertAllOf (DateTime)
gettableAlertAllOfEndsAtL f GettableAlertAllOf{..} = (\gettableAlertAllOfEndsAt -> GettableAlertAllOf { gettableAlertAllOfEndsAt, ..} ) <$> f gettableAlertAllOfEndsAt
{-# INLINE gettableAlertAllOfEndsAtL #-}

-- | 'gettableAlertAllOfStatus' Lens
gettableAlertAllOfStatusL :: Lens_' GettableAlertAllOf (AlertStatus)
gettableAlertAllOfStatusL f GettableAlertAllOf{..} = (\gettableAlertAllOfStatus -> GettableAlertAllOf { gettableAlertAllOfStatus, ..} ) <$> f gettableAlertAllOfStatus
{-# INLINE gettableAlertAllOfStatusL #-}



-- * GettableSilence

-- | 'gettableSilenceId' Lens
gettableSilenceIdL :: Lens_' GettableSilence (Text)
gettableSilenceIdL f GettableSilence{..} = (\gettableSilenceId -> GettableSilence { gettableSilenceId, ..} ) <$> f gettableSilenceId
{-# INLINE gettableSilenceIdL #-}

-- | 'gettableSilenceStatus' Lens
gettableSilenceStatusL :: Lens_' GettableSilence (SilenceStatus)
gettableSilenceStatusL f GettableSilence{..} = (\gettableSilenceStatus -> GettableSilence { gettableSilenceStatus, ..} ) <$> f gettableSilenceStatus
{-# INLINE gettableSilenceStatusL #-}

-- | 'gettableSilenceUpdatedAt' Lens
gettableSilenceUpdatedAtL :: Lens_' GettableSilence (DateTime)
gettableSilenceUpdatedAtL f GettableSilence{..} = (\gettableSilenceUpdatedAt -> GettableSilence { gettableSilenceUpdatedAt, ..} ) <$> f gettableSilenceUpdatedAt
{-# INLINE gettableSilenceUpdatedAtL #-}

-- | 'gettableSilenceMatchers' Lens
gettableSilenceMatchersL :: Lens_' GettableSilence ([Matcher])
gettableSilenceMatchersL f GettableSilence{..} = (\gettableSilenceMatchers -> GettableSilence { gettableSilenceMatchers, ..} ) <$> f gettableSilenceMatchers
{-# INLINE gettableSilenceMatchersL #-}

-- | 'gettableSilenceStartsAt' Lens
gettableSilenceStartsAtL :: Lens_' GettableSilence (DateTime)
gettableSilenceStartsAtL f GettableSilence{..} = (\gettableSilenceStartsAt -> GettableSilence { gettableSilenceStartsAt, ..} ) <$> f gettableSilenceStartsAt
{-# INLINE gettableSilenceStartsAtL #-}

-- | 'gettableSilenceEndsAt' Lens
gettableSilenceEndsAtL :: Lens_' GettableSilence (DateTime)
gettableSilenceEndsAtL f GettableSilence{..} = (\gettableSilenceEndsAt -> GettableSilence { gettableSilenceEndsAt, ..} ) <$> f gettableSilenceEndsAt
{-# INLINE gettableSilenceEndsAtL #-}

-- | 'gettableSilenceCreatedBy' Lens
gettableSilenceCreatedByL :: Lens_' GettableSilence (Text)
gettableSilenceCreatedByL f GettableSilence{..} = (\gettableSilenceCreatedBy -> GettableSilence { gettableSilenceCreatedBy, ..} ) <$> f gettableSilenceCreatedBy
{-# INLINE gettableSilenceCreatedByL #-}

-- | 'gettableSilenceComment' Lens
gettableSilenceCommentL :: Lens_' GettableSilence (Text)
gettableSilenceCommentL f GettableSilence{..} = (\gettableSilenceComment -> GettableSilence { gettableSilenceComment, ..} ) <$> f gettableSilenceComment
{-# INLINE gettableSilenceCommentL #-}



-- * GettableSilenceAllOf

-- | 'gettableSilenceAllOfId' Lens
gettableSilenceAllOfIdL :: Lens_' GettableSilenceAllOf (Text)
gettableSilenceAllOfIdL f GettableSilenceAllOf{..} = (\gettableSilenceAllOfId -> GettableSilenceAllOf { gettableSilenceAllOfId, ..} ) <$> f gettableSilenceAllOfId
{-# INLINE gettableSilenceAllOfIdL #-}

-- | 'gettableSilenceAllOfStatus' Lens
gettableSilenceAllOfStatusL :: Lens_' GettableSilenceAllOf (SilenceStatus)
gettableSilenceAllOfStatusL f GettableSilenceAllOf{..} = (\gettableSilenceAllOfStatus -> GettableSilenceAllOf { gettableSilenceAllOfStatus, ..} ) <$> f gettableSilenceAllOfStatus
{-# INLINE gettableSilenceAllOfStatusL #-}

-- | 'gettableSilenceAllOfUpdatedAt' Lens
gettableSilenceAllOfUpdatedAtL :: Lens_' GettableSilenceAllOf (DateTime)
gettableSilenceAllOfUpdatedAtL f GettableSilenceAllOf{..} = (\gettableSilenceAllOfUpdatedAt -> GettableSilenceAllOf { gettableSilenceAllOfUpdatedAt, ..} ) <$> f gettableSilenceAllOfUpdatedAt
{-# INLINE gettableSilenceAllOfUpdatedAtL #-}



-- * InlineResponse200

-- | 'inlineResponse200SilenceId' Lens
inlineResponse200SilenceIdL :: Lens_' InlineResponse200 (Maybe Text)
inlineResponse200SilenceIdL f InlineResponse200{..} = (\inlineResponse200SilenceId -> InlineResponse200 { inlineResponse200SilenceId, ..} ) <$> f inlineResponse200SilenceId
{-# INLINE inlineResponse200SilenceIdL #-}



-- * Matcher

-- | 'matcherName' Lens
matcherNameL :: Lens_' Matcher (Text)
matcherNameL f Matcher{..} = (\matcherName -> Matcher { matcherName, ..} ) <$> f matcherName
{-# INLINE matcherNameL #-}

-- | 'matcherValue' Lens
matcherValueL :: Lens_' Matcher (Text)
matcherValueL f Matcher{..} = (\matcherValue -> Matcher { matcherValue, ..} ) <$> f matcherValue
{-# INLINE matcherValueL #-}

-- | 'matcherIsRegex' Lens
matcherIsRegexL :: Lens_' Matcher (Bool)
matcherIsRegexL f Matcher{..} = (\matcherIsRegex -> Matcher { matcherIsRegex, ..} ) <$> f matcherIsRegex
{-# INLINE matcherIsRegexL #-}

-- | 'matcherIsEqual' Lens
matcherIsEqualL :: Lens_' Matcher (Maybe Bool)
matcherIsEqualL f Matcher{..} = (\matcherIsEqual -> Matcher { matcherIsEqual, ..} ) <$> f matcherIsEqual
{-# INLINE matcherIsEqualL #-}



-- * PeerStatus

-- | 'peerStatusName' Lens
peerStatusNameL :: Lens_' PeerStatus (Text)
peerStatusNameL f PeerStatus{..} = (\peerStatusName -> PeerStatus { peerStatusName, ..} ) <$> f peerStatusName
{-# INLINE peerStatusNameL #-}

-- | 'peerStatusAddress' Lens
peerStatusAddressL :: Lens_' PeerStatus (Text)
peerStatusAddressL f PeerStatus{..} = (\peerStatusAddress -> PeerStatus { peerStatusAddress, ..} ) <$> f peerStatusAddress
{-# INLINE peerStatusAddressL #-}



-- * PostableAlert

-- | 'postableAlertStartsAt' Lens
postableAlertStartsAtL :: Lens_' PostableAlert (Maybe DateTime)
postableAlertStartsAtL f PostableAlert{..} = (\postableAlertStartsAt -> PostableAlert { postableAlertStartsAt, ..} ) <$> f postableAlertStartsAt
{-# INLINE postableAlertStartsAtL #-}

-- | 'postableAlertEndsAt' Lens
postableAlertEndsAtL :: Lens_' PostableAlert (Maybe DateTime)
postableAlertEndsAtL f PostableAlert{..} = (\postableAlertEndsAt -> PostableAlert { postableAlertEndsAt, ..} ) <$> f postableAlertEndsAt
{-# INLINE postableAlertEndsAtL #-}

-- | 'postableAlertAnnotations' Lens
postableAlertAnnotationsL :: Lens_' PostableAlert (Maybe (Map.Map String Text))
postableAlertAnnotationsL f PostableAlert{..} = (\postableAlertAnnotations -> PostableAlert { postableAlertAnnotations, ..} ) <$> f postableAlertAnnotations
{-# INLINE postableAlertAnnotationsL #-}

-- | 'postableAlertLabels' Lens
postableAlertLabelsL :: Lens_' PostableAlert ((Map.Map String Text))
postableAlertLabelsL f PostableAlert{..} = (\postableAlertLabels -> PostableAlert { postableAlertLabels, ..} ) <$> f postableAlertLabels
{-# INLINE postableAlertLabelsL #-}

-- | 'postableAlertGeneratorUrl' Lens
postableAlertGeneratorUrlL :: Lens_' PostableAlert (Maybe Text)
postableAlertGeneratorUrlL f PostableAlert{..} = (\postableAlertGeneratorUrl -> PostableAlert { postableAlertGeneratorUrl, ..} ) <$> f postableAlertGeneratorUrl
{-# INLINE postableAlertGeneratorUrlL #-}



-- * PostableAlertAllOf

-- | 'postableAlertAllOfStartsAt' Lens
postableAlertAllOfStartsAtL :: Lens_' PostableAlertAllOf (Maybe DateTime)
postableAlertAllOfStartsAtL f PostableAlertAllOf{..} = (\postableAlertAllOfStartsAt -> PostableAlertAllOf { postableAlertAllOfStartsAt, ..} ) <$> f postableAlertAllOfStartsAt
{-# INLINE postableAlertAllOfStartsAtL #-}

-- | 'postableAlertAllOfEndsAt' Lens
postableAlertAllOfEndsAtL :: Lens_' PostableAlertAllOf (Maybe DateTime)
postableAlertAllOfEndsAtL f PostableAlertAllOf{..} = (\postableAlertAllOfEndsAt -> PostableAlertAllOf { postableAlertAllOfEndsAt, ..} ) <$> f postableAlertAllOfEndsAt
{-# INLINE postableAlertAllOfEndsAtL #-}

-- | 'postableAlertAllOfAnnotations' Lens
postableAlertAllOfAnnotationsL :: Lens_' PostableAlertAllOf (Maybe (Map.Map String Text))
postableAlertAllOfAnnotationsL f PostableAlertAllOf{..} = (\postableAlertAllOfAnnotations -> PostableAlertAllOf { postableAlertAllOfAnnotations, ..} ) <$> f postableAlertAllOfAnnotations
{-# INLINE postableAlertAllOfAnnotationsL #-}



-- * PostableSilence

-- | 'postableSilenceId' Lens
postableSilenceIdL :: Lens_' PostableSilence (Maybe Text)
postableSilenceIdL f PostableSilence{..} = (\postableSilenceId -> PostableSilence { postableSilenceId, ..} ) <$> f postableSilenceId
{-# INLINE postableSilenceIdL #-}

-- | 'postableSilenceMatchers' Lens
postableSilenceMatchersL :: Lens_' PostableSilence ([Matcher])
postableSilenceMatchersL f PostableSilence{..} = (\postableSilenceMatchers -> PostableSilence { postableSilenceMatchers, ..} ) <$> f postableSilenceMatchers
{-# INLINE postableSilenceMatchersL #-}

-- | 'postableSilenceStartsAt' Lens
postableSilenceStartsAtL :: Lens_' PostableSilence (DateTime)
postableSilenceStartsAtL f PostableSilence{..} = (\postableSilenceStartsAt -> PostableSilence { postableSilenceStartsAt, ..} ) <$> f postableSilenceStartsAt
{-# INLINE postableSilenceStartsAtL #-}

-- | 'postableSilenceEndsAt' Lens
postableSilenceEndsAtL :: Lens_' PostableSilence (DateTime)
postableSilenceEndsAtL f PostableSilence{..} = (\postableSilenceEndsAt -> PostableSilence { postableSilenceEndsAt, ..} ) <$> f postableSilenceEndsAt
{-# INLINE postableSilenceEndsAtL #-}

-- | 'postableSilenceCreatedBy' Lens
postableSilenceCreatedByL :: Lens_' PostableSilence (Text)
postableSilenceCreatedByL f PostableSilence{..} = (\postableSilenceCreatedBy -> PostableSilence { postableSilenceCreatedBy, ..} ) <$> f postableSilenceCreatedBy
{-# INLINE postableSilenceCreatedByL #-}

-- | 'postableSilenceComment' Lens
postableSilenceCommentL :: Lens_' PostableSilence (Text)
postableSilenceCommentL f PostableSilence{..} = (\postableSilenceComment -> PostableSilence { postableSilenceComment, ..} ) <$> f postableSilenceComment
{-# INLINE postableSilenceCommentL #-}



-- * PostableSilenceAllOf

-- | 'postableSilenceAllOfId' Lens
postableSilenceAllOfIdL :: Lens_' PostableSilenceAllOf (Maybe Text)
postableSilenceAllOfIdL f PostableSilenceAllOf{..} = (\postableSilenceAllOfId -> PostableSilenceAllOf { postableSilenceAllOfId, ..} ) <$> f postableSilenceAllOfId
{-# INLINE postableSilenceAllOfIdL #-}



-- * Receiver

-- | 'receiverName' Lens
receiverNameL :: Lens_' Receiver (Text)
receiverNameL f Receiver{..} = (\receiverName -> Receiver { receiverName, ..} ) <$> f receiverName
{-# INLINE receiverNameL #-}



-- * Silence

-- | 'silenceMatchers' Lens
silenceMatchersL :: Lens_' Silence ([Matcher])
silenceMatchersL f Silence{..} = (\silenceMatchers -> Silence { silenceMatchers, ..} ) <$> f silenceMatchers
{-# INLINE silenceMatchersL #-}

-- | 'silenceStartsAt' Lens
silenceStartsAtL :: Lens_' Silence (DateTime)
silenceStartsAtL f Silence{..} = (\silenceStartsAt -> Silence { silenceStartsAt, ..} ) <$> f silenceStartsAt
{-# INLINE silenceStartsAtL #-}

-- | 'silenceEndsAt' Lens
silenceEndsAtL :: Lens_' Silence (DateTime)
silenceEndsAtL f Silence{..} = (\silenceEndsAt -> Silence { silenceEndsAt, ..} ) <$> f silenceEndsAt
{-# INLINE silenceEndsAtL #-}

-- | 'silenceCreatedBy' Lens
silenceCreatedByL :: Lens_' Silence (Text)
silenceCreatedByL f Silence{..} = (\silenceCreatedBy -> Silence { silenceCreatedBy, ..} ) <$> f silenceCreatedBy
{-# INLINE silenceCreatedByL #-}

-- | 'silenceComment' Lens
silenceCommentL :: Lens_' Silence (Text)
silenceCommentL f Silence{..} = (\silenceComment -> Silence { silenceComment, ..} ) <$> f silenceComment
{-# INLINE silenceCommentL #-}



-- * SilenceStatus

-- | 'silenceStatusState' Lens
silenceStatusStateL :: Lens_' SilenceStatus (E'State)
silenceStatusStateL f SilenceStatus{..} = (\silenceStatusState -> SilenceStatus { silenceStatusState, ..} ) <$> f silenceStatusState
{-# INLINE silenceStatusStateL #-}



-- * VersionInfo

-- | 'versionInfoVersion' Lens
versionInfoVersionL :: Lens_' VersionInfo (Text)
versionInfoVersionL f VersionInfo{..} = (\versionInfoVersion -> VersionInfo { versionInfoVersion, ..} ) <$> f versionInfoVersion
{-# INLINE versionInfoVersionL #-}

-- | 'versionInfoRevision' Lens
versionInfoRevisionL :: Lens_' VersionInfo (Text)
versionInfoRevisionL f VersionInfo{..} = (\versionInfoRevision -> VersionInfo { versionInfoRevision, ..} ) <$> f versionInfoRevision
{-# INLINE versionInfoRevisionL #-}

-- | 'versionInfoBranch' Lens
versionInfoBranchL :: Lens_' VersionInfo (Text)
versionInfoBranchL f VersionInfo{..} = (\versionInfoBranch -> VersionInfo { versionInfoBranch, ..} ) <$> f versionInfoBranch
{-# INLINE versionInfoBranchL #-}

-- | 'versionInfoBuildUser' Lens
versionInfoBuildUserL :: Lens_' VersionInfo (Text)
versionInfoBuildUserL f VersionInfo{..} = (\versionInfoBuildUser -> VersionInfo { versionInfoBuildUser, ..} ) <$> f versionInfoBuildUser
{-# INLINE versionInfoBuildUserL #-}

-- | 'versionInfoBuildDate' Lens
versionInfoBuildDateL :: Lens_' VersionInfo (Text)
versionInfoBuildDateL f VersionInfo{..} = (\versionInfoBuildDate -> VersionInfo { versionInfoBuildDate, ..} ) <$> f versionInfoBuildDate
{-# INLINE versionInfoBuildDateL #-}

-- | 'versionInfoGoVersion' Lens
versionInfoGoVersionL :: Lens_' VersionInfo (Text)
versionInfoGoVersionL f VersionInfo{..} = (\versionInfoGoVersion -> VersionInfo { versionInfoGoVersion, ..} ) <$> f versionInfoGoVersion
{-# INLINE versionInfoGoVersionL #-}


